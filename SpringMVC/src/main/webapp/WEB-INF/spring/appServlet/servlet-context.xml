<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!--  Controller가 처리하지 못하는 URL은 WAS가 처리하도록 하는 설정 -->
	<default-servlet-handler/>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Spring MVC Project에서 50여가지의 설정을 대신해주는 태그 / Spring MVC의 어노테이션을 사용할 수 있도록 해주는 태그 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 캐싱을 수행할 디렉토리를 설정 - css, js 기타 자원에 대해서 캐싱을 하고자 하는 경우 설정을 변경하거나 그대로 사용 - 변할 가능성이 적은 자원들 중 Local에 저장하고자 하는 자원 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- viewResolver 설정 Controller에서 forwarding 하라고 view 이름을 리턴하면 여기 조합과 연산을 해서 실제 출력할 뷰를 결정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션이 붙은 클래스들의 bean을 자동 생성해 줄 패키지를 생성 - Spring MVC Project에서는 이 패키지 안에 클래스들을 생성(하위 패키지를 만드는 것은 무관) -->
	<context:component-scan base-package="com.pk.MVC" />
	
	
	
</beans:beans>
